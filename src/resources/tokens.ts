// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { APIResource } from '../core/resource';
import { APIPromise } from '../core/api-promise';
import { RequestOptions } from '../internal/request-options';
import { path } from '../internal/utils/path';

export class Tokens extends APIResource {
  create(
    body: TokenCreateParams,
    options?: RequestOptions,
  ): APIPromise<SanFranciscoComputeDocumentationToken> {
    return this._client.post('/v0/tokens', { body, ...options });
  }

  list(
    query: TokenListParams | null | undefined = {},
    options?: RequestOptions,
  ): APIPromise<TokenListResponse> {
    return this._client.get('/v0/tokens', { query, ...options });
  }

  delete(id: string, options?: RequestOptions): APIPromise<TokenDeleteResponse> {
    return this._client.delete(path`/v0/tokens/${id}`, options);
  }
}

export interface SanFranciscoComputeDocumentationToken {
  id: string;

  /**
   * ISO 8601 date string of when token was created (in UTC).
   */
  created_at: string;

  /**
   * Description of the token.
   */
  description: string | null;

  /**
   * ISO 8601 date string of when token expires (in UTC).
   */
  expires_at: string;

  is_sandbox: boolean;

  /**
   * Whether the token was generated by the system & is being used in the background,
   * or whether a user explicitly created it for their own use.
   */
  is_system: boolean;

  /**
   * ISO 8601 date string of when token expires (in UTC).
   */
  last_active_at: string | null;

  /**
   * Name of the token.
   */
  name: string | null;

  /**
   * The type of object
   */
  object: 'token';

  origin_client: 'cli' | 'web' | 'manual' | null;

  /**
   * Only available after creation
   */
  token?: string;
}

export interface TokenListResponse {
  data: Array<SanFranciscoComputeDocumentationToken>;

  has_more: boolean;

  object: 'list';
}

export interface TokenDeleteResponse {
  success: boolean;
}

export interface TokenCreateParams {
  /**
   * Number of seconds until token expires.
   */
  expires_in_seconds: number;

  origin_client: 'cli';

  /**
   * Description of the token.
   */
  description?: string;

  /**
   * Name of the token.
   */
  name?: string;
}

export interface TokenListParams {
  /**
   * Whether to include system tokens.
   */
  include_system?: boolean;

  origin_client?: 'cli' | 'web' | 'manual';
}

export declare namespace Tokens {
  export {
    type SanFranciscoComputeDocumentationToken as SanFranciscoComputeDocumentationToken,
    type TokenListResponse as TokenListResponse,
    type TokenDeleteResponse as TokenDeleteResponse,
    type TokenCreateParams as TokenCreateParams,
    type TokenListParams as TokenListParams,
  };
}
